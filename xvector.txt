{
    <xt::xstrided_container<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, 
        (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = 
        {<xt::xcontainer<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, 
            (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = 
        {<xt::xcontiguous_iterable<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, 
        (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = 
        {<xt::xiterable<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, (xt::layout_type)1, 
        xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = 
        {<xt::xconst_iterable<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, 
        (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = 
        {<No data fields>}, <No data fields>}, static static_layout = xt::layout_type::row_major}, 
        <xt::xaccessible<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, 
        (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = 
        {<xt::xconst_accessible<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, 
        (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = 
        {<No data fields>}, <No data fields>}, static static_layout = xt::layout_type::row_major}, 
            m_shape = {static alignment = 8, m_allocator = {<__gnu_cxx::new_allocator<unsigned long>> = {<No data fields>}, <No data fields>}, m_begin = 0x7fffffffdb80, m_end = 0x7fffffffdb90, m_capacity = 0x7fffffffdba0, m_data = {3, 3, 0, 0}}
            , m_strides = {static alignment = 8, m_allocator = {<__gnu_cxx::new_allocator<long>> = {<No data fields>}, <No data fields>}, m_begin = 0x7fffffffdbc0, m_end = 0x7fffffffdbd0, m_capacity = 0x7fffffffdbe0, m_data = {3, 1, 0, 140737353727616}}, 
            m_backstrides = {static alignment = 8, m_allocator = {<__gnu_cxx::new_allocator<long>> = {<No data fields>}, <No data fields>}, m_begin = 0x7fffffffdc00, m_end = 0x7fffffffdc10, m_capacity = 0x7fffffffdc20, m_data = {6, 2, 68719476742, -8671968155345495296}}, 
            m_layout = xt::layout_type::row_major}, <xt::xcontainer_semantic<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = {<xt::xsemantic_base<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = {<xt::xsharable_expression<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = {<xt::xexpression<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag> >> = {<No data fields>}, p_shared = std::shared_ptr<xt::xarray_container<xt::uvector<double, xsimd::aligned_allocator<double, 16> >, (xt::layout_type)1, xt::svector<unsigned long, 4, std::allocator<unsigned long>, true>, xt::xtensor_expression_tag>> (empty) = {get() = 0x0}}, <No data fields>}, <No data fields>}, <xt::extension::xtensor_empty_base> = {<No data fields>}, 
            m_storage = {m_allocator = {<No data fields>}, p_begin = 0x555555570eb0, p_end = 0x555555570ef8}}
